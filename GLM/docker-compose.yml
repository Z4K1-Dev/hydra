version: '3.8'

services:
  glm-cli:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: glm-cli
    volumes:
      - ./data:/app/data
      - ./config:/app/config
      - ./logs:/app/logs
      - ./sessions:/app/sessions
    environment:
      - NODE_ENV=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - AI_MODEL=${AI_MODEL:-gpt-4}
      - DB_PATH=/app/data/glm.db
      - LOG_FILE=/app/logs/glm.log
      - LOG_LEVEL=${LOG_LEVEL:-info}
    restart: unless-stopped
    networks:
      - glm-network

  # Optional: Web interface
  glm-web:
    build:
      context: .
      dockerfile: docker/Dockerfile.web
    container_name: glm-web
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
      - ./config:/app/config
    environment:
      - NODE_ENV=production
      - API_URL=http://glm-cli:3000
    depends_on:
      - glm-cli
    restart: unless-stopped
    networks:
      - glm-network

  # Optional: Database (if you want separate database)
  glm-db:
    image: postgres:15
    container_name: glm-db
    environment:
      - POSTGRES_DB=glm
      - POSTGRES_USER=glm
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - glm-network

volumes:
  postgres_data:

networks:
  glm-network:
    driver: bridge